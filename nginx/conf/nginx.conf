# global 配置
worker_processes  auto;

# events
events {
    worker_connections  1024;
}

# http
http {
    upstream group1 {
        server localhost:80 weight=1;
        server localhost:80 weight=2;
    }

    ssl_certificate      /etc/ssl/nginx/example.pem;
    ssl_certificate_key  /etc/ssl/nginx/example.key;
    
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    
    # 指定的狀態，將請求轉至其他服務器
    proxy_next_upstream error timeout http_503;

    log_format   var_lot_format '$remote_addr - $remote_user [$time_local] $status '
                                '"$request" $body_bytes_sent "$http_referer" '
                                '"$http_x_forwarded_for" '
                                't=$request_time ut=$upstream_response_time';

    error_log    /var/log/nginx/error.log;
    access_log   /var/log/nginx/access.log  var_lot_format;

    server {
        # 服務監聽 port
        listen  80;
        listen  443;
        # 匹配的服務名稱
        # server_name  localhost example.com;

        # 匹配的路徑
        location / {
            # 轉至指定 url
            proxy_pass  http://group1/;
            # 如果使用正規則達式就要搭配參數
            # proxy_pass  http://group1/$1;
        }

        # 使用「=」完全比對
        # 權重最高
        location = / {
            return 200 'hello /';
        }

        # 使用「^~」表示比對開頭字串、區分大小寫
        # 權重第二
        location ^~ /a {
            return 200 'hello /a';

            # 使用巢狀定義 location 並不影響邏輯，只方便管理
            # 優先度 nested 較 direct 晚，原因待釐清
            location ^~ /aa {
                return 200 'hello nested /aa';
            }
        }
        location ^~ /aa {
            return 200 'hello direct /aa';
        }

        # 使用正規表達式比對
        # 權重第三
        # 權重一樣則以匹配字數較多的為主，再來是定義順序(前面優先)
        # 正規表達式比對 /ABC 開頭的、忽略大小寫
        location ~* ^/(ABC)(.*) {
            proxy_pass  http://group1/$1;
            # $is_args: 有 query string 會加上 ?
            # $args: 所有的 query string
            return 200 'hello /$1$2$is_args$args';
        }

        include other-pattern.conf;
    }
}